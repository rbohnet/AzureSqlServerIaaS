{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "URL to acquire other templates"
      },
      "defaultValue": "https://raw.githubusercontent.com/rbohnet/AzureSqlServerIaaS/master"
    },
    "vmPrefix": {
      "type": "string"
    },
    "assetLocationUrl": {
      "type": "string",
      "metadata": {
        "description": "URL for DSC assets"
      },
      "defaultValue": "https://raw.githubusercontent.com/rbohnet/AzureSqlServerIaaS/master/dsc"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM"
      }
    },
    "sqlServerServiceAccountUsername": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage account created to store the VMs disks"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_DS2"
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('vmPrefix'), '-vnet')]",
    "vnetAddressRange": "10.0.0.0/16",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnets": [
      {
        "name": "Subnet-1",
        "properties": {
          "addressPrefix": "10.0.0.0/24"
        }
      }
    ],
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnets')[0].name)]",
    "vnetNewUrl": "[concat(parameters('baseUrl'), '/vnet-new.json')]",

    "publicIpAddress": "[concat(parameters('vmPrefix'), '-pip')]",
    "publicIpAddressType": "Dynamic",
    "publicIpsUrl": "[concat(parameters('baseUrl'), '/publicIps.json')]",

    "nicName": "[concat(parameters('vmPrefix'), '-nic')]",
    "nicsNewUrl": "[concat(parameters('baseUrl'), '/nics-new.json')]",

    "storageAccountSetupUrl": "[concat(parameters('baseUrl'), '/storageAccount.json')]",

    "vmName": "[concat(parameters('vmPrefix'), '-vm')]",
    "vmNewUrl": "[concat(parameters('baseUrl'), '/vmSql-new.json')]",

    "dscModulesUrl": "[concat(parameters('assetLocationUrl'), '/ConfigureSqlServer.ps1.zip'",
    "dscConfigurationFunction": "ConfigureSqlServer.ps1\\ConfigureSqlServer"
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetNewUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('vnetAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpPublicIps",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('publicIpsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "publicIpAddressName": {
            "value": "[variables('publicIpAddress')]"
          },
          "publicIpAddressType": {
            "value": "[variables('publicIpAddressType')]"
          },
          "dnsPrefix": {
            "value": "[parameters('vmPrefix')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpPublicIps"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicsNewUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "publicIpAddressid": {
            "value": "[reference('SettingUpPublicIps').outputs.publicIpResourceId.value]"
          }
        }
      }
    },
    {
      "name": "ProvisioningVirtualMachine",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmNewUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "sqlServerServiceAccountUsername": {
            "value": "[parameters('sqlServerServiceAccountUsername')"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')"
          },
          "sqlModulesUrl": {
            "value": "[variables('dscModulesUrl')]"
          },
          "sqlConfigurationFunction": {
            "value": "[variables('dscConfigurationFunction')]"
          }
        }
      }
    }
  ],
  "outputs": { }
}
